[{"title":"神器 - Alfred","date":"2017-07-12T08:04:00.000Z","path":"2017/07/12/mac/alfred/","text":"Alfred 常规操作 5分钟上手Mac效率神器Alfred以及Alfred常用操作Alfred 3 Snippets 初体验 Alfred workflow借助 Alfred 的 Workflows 功能可以做哪些好玩的事情？http://www.alfredworkflow.com/Mac效率神器Alfred以及常用Workflowhttps://github.com/zenorocha/alfred-workflows#timezones-v190–downloadhttps://github.com/hzlzh/Alfred-Workflowshttps://github.com/stidio/Alfred-Workflow用Alfred大幅提升操作效率 - workflowAlfred 3 中的惊喜https://github.com/derimagia/awesome-alfred-workflowsWorkflow Search","tags":[{"name":"alfred","slug":"alfred","permalink":"http://zhensherlock.github.io/tags/alfred/"},{"name":"Mac","slug":"Mac","permalink":"http://zhensherlock.github.io/tags/Mac/"}]},{"title":"Mac下使用pip","date":"2017-06-13T04:40:00.000Z","path":"2017/06/13/python/install-pip/","text":"安装pipsudo easy_install pip pip镜像直接使用pip install package_name 会发现下载速度很慢，我们可以使用清华的pypi镜像 临时使用pip install -i https://pypi.tuna.tsinghua.edu.cn/simple package_name 永久使用（待验证）新建 ~/.pip/pip.conf 文件，输入下面的内容[global]index-url = https://pypi.tuna.tsinghua.edu.cn/simple 其他镜像源阿里云豆瓣 参考文献pypi 镜像使用帮助","tags":[{"name":"python","slug":"python","permalink":"http://zhensherlock.github.io/tags/python/"},{"name":"pip","slug":"pip","permalink":"http://zhensherlock.github.io/tags/pip/"}]},{"title":"Mac下安装pyenv","date":"2017-06-12T04:40:00.000Z","path":"2017/06/12/python/install-pyenv/","text":"前言python开发者有时会遇到不同版本的项目，这时就需要有切换python版本的功能。pyenv就是python版本管理器，下面我们就看一下pyenv在Mac上的安装过程。 安装pyenvbrew install pyenv 接下来在 ~/.bashrc 或 ~/.zshrc 中添加如下内容：# Start pyenv Configexport PYENV_ROOT=/users/&lt;username&gt;/.pyenvexport PATH=$PYENV_ROOT/bin:$PATHeval &quot;$(pyenv init -)&quot;# End pyenv Config pyenv命令Some useful pyenv commands are: commands 列出所有pyenv可用的命令 local 设置或显示本地应用程序特定的Python版本 global 设置或显示系统全局的Python版本 shell 设置或显示shell外壳的Python版本 install 使用python-build安装指定Python版本 uninstall 卸载已经安装的Python rehash 刷新 pyenv shims (安装之后运行这个) version 查看当前使用的版本 versions 列出已经安装的Python版本，当前激活版本用*号标注 which 显示的完整路径的可执行文件 whence 列出包含给定的可执行所有的Python版本See `pyenv help &lt;command&gt;&apos; for information on a specific command.For full documentation, see: https://github.com/pyenv/pyenv/blob/master/COMMANDS.md 安装python版本pyenv install 3.6.3 当我们输入上面的命令，会发现下载安装包的速度非常慢，这时我们就需要用到PYENV_ROOT这个路径变量。我们先自行下载3.6.3的安装包，然后将安装包放入PYENV_ROOT路径下的cache文件夹中（如下图所示），最后再次输入安装，就会自动跳过下载步骤，进入安装环节。 图1 安装完成后，输入如下命令：# 用于刷新 pyenv shimspyenv rehash 切换版本 优先级关系：shell——local——global # 设置系统全局的Python版本（不建议直接操作，可能会影响Mac环境）pyenv global 3.6.3 # 设置本地应用程序的Python版本pyenv local 3.6.3 # 设置shell的Python版本pyenv shell 3.6.3 virtualenv创建纯净虚拟环境virtualenv可以创建出一个全新的独立虚拟环境，这样系统python环境就不会受到任何的影响。 安装pyenv-virtualenvgit clone https://github.com/yyuu/pyenv-virtualenv.git ~/.pyenv/plugins/pyenv-virtualenv 接下来在 ~/.bashrc 或 ~/.zshrc 中添加如下内容：eval &quot;$(pyenv virtualenv-init -)&quot; 创建虚拟环境pyenv virtualenv 3.6.3 virtual_env363 上述代码会创建一个名为virtual_env363的python虚拟环境，python的版本是3.6.3在创建虚拟环境时，我们可以加上参数 --no-site-packages，这个参数不会复制系统python环境中的所有第三方包。我们可以通过 pyenv versions 来查看本机所有的python环境 使用虚拟环境pyenv activate virtual_env363 停用虚拟环境pyenv deactivate 卸载虚拟环境pyenv uninstall virtual_env363 或者rm -rf ~/.pyenv/versions/virtual_env363/ Anaconda科学计算包Anaconda 是一个用于科学计算的 Python 发行版，支持 Linux, Mac, Windows, 包含了众多流行的科学计算、数据分析的 Python 包。使用上述步骤安装Anaconda包并切换到Anaconda包环境 创建虚拟环境我们可以使用 conda 命令来创建名为test_env的虚拟环境，python版本为python3.6.3conda create -n test_env python=3.6.3 使用虚拟环境source activate test_env 停用虚拟环境source deactivate 卸载虚拟环境conda remove -n test_env --all 安装第三方的依赖包conda install package_name 和pip一样，国内安装依赖包时会很慢，需要设置镜像资源 conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/conda config --set show_channel_urls yes 参考文献Mac多Python版本共存，多个独立Python开发环境切换。Mac OS X 下 Python 2.7 &amp; 3.4 共存Python多版本切换工具-Pyenv\\virtualenv及Anaconda科学计算环境的配置python多版本和虚拟环境(pyenv+conda or virtualenv)Pyenv 使用笔记Anaconda 镜像使用帮助跳一跳Android-和-iOS-操作步骤python虚拟环境–virtualenvvirtualenv-廖雪峰的官方网站","tags":[{"name":"python","slug":"python","permalink":"http://zhensherlock.github.io/tags/python/"},{"name":"pyenv","slug":"pyenv","permalink":"http://zhensherlock.github.io/tags/pyenv/"}]},{"title":"Mac 使用 Remote Desktop Connection Client for Mac 遇到的坑","date":"2017-05-12T04:04:00.000Z","path":"2017/05/12/mac/rdc-windows/","text":"前言Remote Desktop Connection Client for Mac 在下文中直接用RDC来代替，请知晓 正文 在MAC下使用RDC远程Windows系统时，总是会遇到一些问题，下面我们来踩一下那些坑。 证书或相关链无效错误在Mac的RDC软件中打开首选项 图1 在首选项中切换到 安全性 一栏，在远程计算机验证中选择 即使验证失败，也始终连接 选项 图2 远程桌面连接无法验证您希望连接的计算机的身份以下解决操作均在被连接的Windows上操作 开始-运行-gpedit.msc，进入组策略编辑器 进入 本地计算机策略》计算机配置》管理模板》windows组件》远程桌面服务》远程桌面会话主机》安全 将 远程（RDP）连接要求使用指定的安全层 改为启用，并将安全层选择 RDP 将 要求使用网络级别的身份验证对远程连接的用户进行身份验证 ，改为禁用 关闭组策略编辑器，重启计算机 参考文献Remote Desktop Connection for mac 报错：证书或相关链无效。Mac远程连接windows报错“证书或相关链无效，是否仍要连接到此计算机”的处理办法。MAC 下RDC 连接windows7提示“远程桌面连接无法验证您希望连接的计算机的身份” 解决办法","tags":[{"name":"Mac","slug":"Mac","permalink":"http://zhensherlock.github.io/tags/Mac/"},{"name":"RDC","slug":"RDC","permalink":"http://zhensherlock.github.io/tags/RDC/"}]},{"title":"查看IIS中网站所对应的进程信息","date":"2017-04-13T02:42:00.000Z","path":"2017/04/13/server/iis-process-pid/","text":"导语 有时我们一台服务器会部署多个项目，这时如果要查看某个项目所对应的进程，就会比较麻烦，下面我们已Windows Server 2008（IIS7）来看一下如何查询网站所对应的进程。 Windows Server 2008（IIS7）操作步骤： 进入CMD 输入命令： cd C:\\Windows\\System32\\inetsrv 进入inetsrv 目录 输入命令： appcmd list wp 任务管理器中点击查看–选择列–选择PID（进程标识符） 图1 图2 参考文献如何查看进程中PID所对应的IIS应用程序池IIS7 全新管理工具AppCmd.exe的命令使用实例分享","tags":[{"name":"WinServer","slug":"WinServer","permalink":"http://zhensherlock.github.io/tags/WinServer/"},{"name":"IIS","slug":"IIS","permalink":"http://zhensherlock.github.io/tags/IIS/"}]},{"title":"HTML5 IndexedDB 入门","date":"2017-03-12T04:04:00.000Z","path":"2017/03/12/front/html5-indexeddb/","text":"导语 在HTML5强势来袭时，前端存储数据的方案变的很多，有Web Storage（Local Storage、Session Storage）、Cookie、Web SQL Database、IndexedDB。近些年Web Storage、Cookie已经用烂了，Web SQL Database也已经被废弃，唯独IndexedDB提起的很少，今天就探究一下IndexedDB使用的方式。下面是使用 React + Webpack + ES6 完成的IndexedDB管理平台https://zhensherlock.github.io/react-indexeddb-system/ IndexedDBIndexedDB是一种可以让开发者将数据保存在客户端中，保存的数据可以被查询，并且可以离线使用。IndexedDB对于那些需要存储大量数据，或者是需要离线使用的程序是非常有效的解决方法。下面是IndexedDB数据库的特点： 非关系型数据库作为WebSQL数据库的取代品，IndexedDB和WebSQL的不同点在于WebSQL是关系型数据库（比如：SQL Server，MySQL）IndexedDB是非关系型数据库（比如：mongodb）。IndexedDB不使用SQL来操作数据库。 它属于noSQL数据库。IndexedDB数据库使用key-value键值对储存数据，values数据可以是各式各样的结构体，也可以是文件、blobs等数据类型。 事务模式IndexedDB的任何数据库操作行为都必须要发生在事务中，如果在事务外执行数据库操作，都会提示报错。IndexedDB事务是自动提交，而非手动提交。事务主要用在高并发系统中，当用户在不同的标签页同时打开多个实例时，这时如果没有事务功能，这些实例就会互相影响，导致数据错乱。 异步同步IndexedDB分别提供了同步和异步访问的API，同步API目前还没有被任何浏览器所实现，并且同步API只能在Web Workers中使用。异步API在Web Workers内部和外部都可以使用。异步API方法调用完后会继续向后执行，而不会阻塞调用线程，如果想要返回数据需要开发者提供一个回调函数来接受数据，当操作完成时，数据库会以DOM事件的方式通知你，同时事件的类型会告诉你这个操作是否成功完成。这个和XMLHttpRequest请求是类似的。 同源（same-origin）策略IndexedDB遵循同源（same-origin）策略，同源下，数据共享。所以你只能访问同源中存储的数据，而不能访问其他源的。域名、应用层协议和端口只要有一个不同，就是不同源。 数据库的CURD下面来看一下IndexedDB操作示例，以下示例使用了部分es6语法： 打开数据库// 打开数据库，第一个参数是数据库名称，第二个参数是数据库版本号，主要用于变更数据库结构var request = window.indexedDB.open('library', 1);var dbObject = &#123;&#125;;// 打开数据库失败的回调函数request.onerror = event =&gt; &#123; alert(\"不能打开数据库,错误代码: \" + event.target.errorCode);&#125;;// 打开数据库成功的回调函数request.onsuccess = event =&gt; &#123; dbObject.db = event.target.result;&#125;;// 请求数据库版本改变的回调函数，用于操作数据库结构request.onupgradeneeded = event =&gt; &#123; ...&#125; 操作数据库结构// 请求数据库版本改变的回调函数，用于操作数据库结构request.onupgradeneeded = event =&gt; &#123; dbObject.db = event.target.result; // 如不存在books表结构，就创建books表 if(!dbObject.db.objectStoreNames.contains('books')) &#123; // 创建books表，使用isbn字段作为主键 var store = dbObject.db.createObjectStore(\"books\", &#123;keyPath: \"isbn\"&#125;); // 创建索引，设置title字段唯一性，第一个参数是索引的名称，第二个参数是索引涉及到的字段列表，第三个参数是设置是否具有唯一性 store.createIndex(\"by_title\", \"title\", &#123;unique: true&#125;); store.createIndex(\"by_author\", \"author\"); &#125; // 如不存在user表结构，就创建user表 if(!dbObject.db.objectStoreNames.contains('user')) &#123; // 创建books表，使用使用自增字段，系统自动创建key字段 var userStore = dbObject.db.createObjectStore(\"user\", &#123; autoIncrement:true &#125;); // 创建索引，设置name字段唯一性 userStore.createIndex(\"by_name\", \"name\", &#123;unique: true&#125;); &#125; &#125; 新增和修改数据// 创建一个事务，第一个参数是该事务所涉及到的表结构，第二个参数是该事务的权限，当前是可读可写，其他两个是readonly（只读取数据时使用）、versionchange（基本不用）let transaction = dbObject.db.transaction(['books'], \"readwrite\");// 获取books表实例let store = transaction.objectStore('books');// 根据isbn主键进行搜索，如果没有相同主键的数据，就添加，否则就根据当前主键数值进行修改。let request = store.put(&#123;title: title, author: author, isbn: isbn&#125;);// 操作成功的回调函数request.onsuccess = () =&gt; &#123; console.log('put complete');&#125;;// 操作失败的回调函数request.onerror = (event) =&gt; &#123; console.log(event.target.errorCode);&#125;; 如果只想添加可以使用add方法，当主键值相冲突时，会执行操作失败的回调函数。let request = store.add(&#123;title: title, author: author, isbn: isbn&#125;); 删除数据// 根据isbn主键值删除所对应的数据dbObject.db.transaction('books', 'readwrite').objectStore('books').delete(isbn);// 清除表中所有的数据dbObject.db.transaction('books', 'readwrite').objectStore('books').clear(); 以上方法执行的结果都必须使用onsuccess和onerror中获取。 读取数据使用索引来查询数据的前提是你只需要一条数据，如果有多条数据满足情况，你总是得到键值最小的那个。let store = dbObject.db.transaction('books').objectStore('books');// by_title是索引名称，在onupgradeneeded函数中创建的。store.index('by_title').get(title).onsuccess = (event) =&gt; &#123; console.log(event.target.result);&#125;; 当我们筛选数据时需要返回多条数据的时候，我们就需要使用游标来实现。let store = dbObject.db.transaction('books').objectStore('books');// 根据by_author索引来使用游标。store.index('by_author').openCursor(IDBKeyRange.only(author)).onsuccess = (event) =&gt; &#123; let cursor = event.target.result; if(cursor)&#123; let obj = cursor.value; console.log(obj); // 将标识标记到下一行。 cursor.continue(); &#125;&#125;; 上面用到的IDBKeyRange是用于添加查询条件的，相当于sql中的where从句，IDBKeyRange有以下几个方法： 1、只匹配条件为 “michael” 值IDBKeyRange.only('michael') 2、缩小匹配范围，从 “michael” 到底部，包括 “michael”IDBKeyRange.lowerBound('michael'); 3、缩小匹配范围，从 “michael” 到底部，不包括 “michael”IDBKeyRange.lowerBound('michael', true); 4、缩小匹配范围，从头到 “michael” ，包括 “michael”IDBKeyRange.upperBound('michael'); 5、缩小匹配范围，从头到 “michael” ，不包括 “michael”IDBKeyRange.upperBound('michael', true); 6、缩小匹配范围，从头到 “michael” ，不包括 “michael”IDBKeyRange.upperBound('michael', true); 7、缩小匹配范围，从 “michael” 到 “john” ，第三个参数是否不包括 “michael” ，第四个参数是否不包括 “john”IDBKeyRange.bound('michael', 'john', true, true); 参考文献IndexedDB基本概念使用 IndexedDBIndexed Database API 2.0HTML5本地存储——IndexedDB（一：基本使用）HTML5本地存储——IndexedDB（二：索引）HTML5本地存储IndexedDB基础介绍（一）-数据库的简单增删改查HTML5本地存储IndexedDB基础介绍（二）- 游标和索引indexedDB如何实现满足多重条件查询？","tags":[{"name":"HTML5","slug":"HTML5","permalink":"http://zhensherlock.github.io/tags/HTML5/"},{"name":"indexedDB","slug":"indexedDB","permalink":"http://zhensherlock.github.io/tags/indexedDB/"}]},{"title":"Photoshop投影转换成CSS3中box-shadow","date":"2017-02-12T08:00:00.000Z","path":"2017/02/12/front/photoshop-convert-box-shadow/","text":"正文 随着CSS3的兴起，前端可以自己做出阴影、圆角等效果，但是前端不是专业的设计师，所以还是需要UI来帮我们设计效果，那么问题来了，UI设计出的效果图，我们前端怎么去正确的实现呢？下面来看一下Photoshop投影各个参数如何转换成CSS3中的box-shadow。 box-shadow基本语法如下： {box-shadow:[inset] x-offset y-offset blur-radius spread-radiuscolor} Photoshop 图1 名称 说明 混合模式 Photoshop有很多混合模式，但是CSS3阴影只支持正常模式 颜色(color) 阴影颜色。对应于CSS3阴影中的 color 值 不透明度(opacity) 阴影的不透明度。对应于CSS3阴影的颜色 rgba() 中的 a 值 角度(Angle) 投影的角度 距离(Distance) 阴影的距离。根据角度和距离可以换算出CSS3阴影中的x-offset和y-offet。 x-offset = Distance * cos(180 -Angle) ， y-offset = Distance * sin(180 - Angle) 扩展(Spread) 阴影的扩展大小。控制阴影实体颜色和虚化颜色的多少。 Spread * Size = 阴影中实体颜色的大小 。剩下的就是虚化的颜色。CSS3阴影 spread-radius = Spread * Size 大小(Size) 阴影的大小。在CSS3中 blur-radius + spread-radius = Size 即 blur-radius = Size - spread-radius text-shadowtext-shadow 没有 spread-radius 所以不能完全实现PS中的效果。 参考文献Photoshop投影与CSS中box-shadow的转换","tags":[{"name":"CSS","slug":"CSS","permalink":"http://zhensherlock.github.io/tags/CSS/"},{"name":"Photoshop","slug":"Photoshop","permalink":"http://zhensherlock.github.io/tags/Photoshop/"}]},{"title":"macOS 安装 MySQL","date":"2017-01-15T02:04:00.000Z","path":"2017/01/15/mac/install-mysql/","text":"正文 首次在 macOS 上安装MySQL时会遇到很多问题，以下是我遇到的问题和解决方案 使用brew安装MySQL在命令行中输入 brew install mysql 安装MySQL。 下载dmg安装MySQL访问MySQL官网http://www.mysql.com/downloads/，点击下载MySQL Community Server，注意平台。 卸载MySQL使用brew安装MySQL的，可以执行 brew uninstall mysql 或者 brew remove mysql然后再执行以下命令：sudo rm /usr/local/mysqlsudo rm -rf /usr/local/mysql*sudo rm -rf /Library/StartupItems/MySQLCOMsudo rm -rf /Library/PreferencePanes/My*rm -rf ~/Library/PreferencePanes/My*sudo rm -rf /Library/Receipts/mysql*sudo rm -rf /Library/Receipts/MySQL* 再检查以下存储位置，如有文件，直接删除/usr/local/Cellar 里的mysql文件/usr/local/var 里的mysql文件/tmp 里的mysql.sock, mysql.sock.lock, my.cnf文件brew安装的安装包存储在/usr/local/Library/Cache/Homebrew也可以一并删除 最后执行 brew cleanup MySQL Workbench（GUI）MySQL官网上有 MySQL Workbench 的下载链接，访问https://downloads.mysql.com/archives/workbench/，点击下载MySQL Workbench(GUI Tool)，如果发现安装之后，进入Workbench后，执行SQL后，一直卡死，请下载6.1.7版本。 MySQL问题下面是我在使用MySQL时出现的问题： Access denied for user ‘’@’localhost’ to database’执行 mysql -u root -p 之后输入之前MySQL随机生成出来的密码，一直提示不正确的时候，我们就执行以下命令：mysqld stopmysqld_safe --skip-grant-tables &amp;mysql -u rootuse mysql;update user set authentication_string=password(&apos;123456&apos;) where user=&apos;root&apos;;flush privileges;quitmysqld restart You must reset your password using ALTER USER statement before executing this statement.当我们成功登录MySQL后，执行任何的命令，都提示上面的错误，我们需要执行以下命令：SET PASSWORD = PASSWORD(&apos;123456&apos;);ALTER USER &apos;root&apos;@&apos;localhost&apos; PASSWORD EXPIRE NEVER;flush privileges; 参考文献MAC下安装与配置MySQL在 Mac 下用 Homebrew 安装 MySQLworkbench 无法执行命令？Mac Pro下卸载安装Mysqlmysql-community-server 5.7.16 设置密码mac mysql error You must reset your password using ALTER USER statement before executing this statement.","tags":[{"name":"Mac","slug":"Mac","permalink":"http://zhensherlock.github.io/tags/Mac/"},{"name":"MySQL","slug":"MySQL","permalink":"http://zhensherlock.github.io/tags/MySQL/"}]},{"title":"国内NPM使用","date":"2017-01-12T08:04:00.000Z","path":"2017/01/12/npm-china/","text":"导语 NPM在国内使用时，下载速度有时会很慢，甚至有下载不了的情况，为了不影响项目开发进度，我们有以下几种方案（我们以安装underscore为例）。 临时修改在命令行中输入：npm install underscore -g --registry=https://registry.npm.taobao.org 全局修改在命令行中输入：npm config set registry https://registry.npm.taobao.org 编辑 ~/.npmrc 或者 C:\\Users\\Administrator\\.npmrc 加入下面内容registry = https://registry.npm.taobao.org 使用CNPM我们可以使用CNPM来代替NPM，CNPM的源和包都在国内，所以速度比NPM快的多，并且CNPM还支持gzip压缩。下面是macOS和Linux的安装方法。 macOS安装CNPM首先安装CNPMnpm install -g cnpm --registry=https://registry.npm.taobao.org 接一下在~/.bashrc或者~/.zshrc定义别名alias cnpm=&quot;npm --registry=https://registry.npm.taobao.org \\--cache=$HOME/.npm/.cache/cnpm \\--disturl=https://npm.taobao.org/mirrors/node \\--userconfig=$HOME/.cnpmrc&quot; Linux安装CNPM首先安装CNPMnpm install -g cnpm --registry=https://registry.npm.taobao.org 接一下在~/.bashrc或者~/.zshrc定义别名 echo &apos;\\n#alias for cnpm\\nalias cnpm=&quot;npm --registry=https://registry.npm.taobao.org \\--cache=$HOME/.npm/.cache/cnpm \\--disturl=https://npm.taobao.org/dist \\--userconfig=$HOME/.cnpmrc&quot;&apos; &gt;&gt; ~/.bashrc &amp;&amp; source ~/.bashrc 如何使用安装完成之后，我们就可以使用cnpm install [packagename]来安装模块了。 参考文献使用npm安装一些包失败了的看过来（npm国内镜像介绍）淘宝 NPM 镜像npm install 无响应解决方案","tags":[{"name":"NPM","slug":"NPM","permalink":"http://zhensherlock.github.io/tags/NPM/"}]},{"title":"Sierra 10.12 brew update 报错","date":"2017-01-12T08:04:00.000Z","path":"2017/01/12/mac/brew-update/","text":"正文 当 macOS 升级到Sierra 10.12后，执行brew update，出现以下错误： Error: /usr/local must be writable! 解决方案上面提示说没有权限，那我们就给当前用户在 /usr/local 路径的权限。 在命令行中执行： sudo chown -R whoami /usr/local 请将whoami替换成当前用户名 参考文献In macOS 10.12 Sierra, /usr/local is readonly“Error: /usr/local must be writable!” (Sierra 10.12 Beta (16A239j) )","tags":[{"name":"Mac","slug":"Mac","permalink":"http://zhensherlock.github.io/tags/Mac/"},{"name":"brew","slug":"brew","permalink":"http://zhensherlock.github.io/tags/brew/"}]},{"title":"Hello World","date":"2017-01-11T12:48:01.000Z","path":"2017/01/11/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new \"My New Post\" More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","tags":[{"name":"Hello World","slug":"Hello-World","permalink":"http://zhensherlock.github.io/tags/Hello-World/"}]},{"title":"Microsoft Office MIME Types","date":"2017-01-10T09:52:02.000Z","path":"2017/01/10/Microsoft-Office-MIME-Types/","text":"文正我们前端在做上传文件时，会遇到上传时要限制文件类型的需求，代码如下：&lt;input type=\"file\" accept=\"image/*\"&gt; 但是在最近高版本的标准浏览器会出现点击响应过慢的情况，后来改成下面的代码后，就没有问题了，代码如下：&lt;input type=\"file\" accept=\"image/gif,image/jpeg,image/jpg,image/png,image/svg\"&gt; 因为在使用image/*时，系统会为每个文件都遍历一下image下的所有类型，所以当文件较多的时候，会出现上传弹出框出现滞慢的情况。audio/* video/* 都会出现上述情况，建议将*通配符改成指定的MIME类型来实现。 微软办公软件MIME Type某些软件的文件按类型比较多，特别是微软办公软件的文件类型，下面是微软办公软件的MIME Type列表。 后缀名 MIME Type .doc application/msword .dot application/msword .docx application/vnd.openxmlformats-officedocument.wordprocessingml.document .dotx application/vnd.openxmlformats-officedocument.wordprocessingml.template .docm application/vnd.ms-word.document.macroEnabled.12 .dotm application/vnd.ms-word.template.macroEnabled.12 .xls application/vnd.ms-excel .xlt application/vnd.ms-excel .xla application/vnd.ms-excel .xlsx application/vnd.openxmlformats-officedocument.spreadsheetml.sheet .xltx application/vnd.openxmlformats-officedocument.spreadsheetml.template .xlsm application/vnd.ms-excel.sheet.macroEnabled.12 .xltm application/vnd.ms-excel.template.macroEnabled.12 .xlam application/vnd.ms-excel.addin.macroEnabled.12 .xlsb application/vnd.ms-excel.sheet.binary.macroEnabled.12 .ppt application/vnd.ms-powerpoint .pot application/vnd.ms-powerpoint .pps application/vnd.ms-powerpoint .ppa application/vnd.ms-powerpoint .pptx application/vnd.openxmlformats-officedocument.presentationml.presentation .potx application/vnd.openxmlformats-officedocument.presentationml.template .ppsx application/vnd.openxmlformats-officedocument.presentationml.slideshow .ppam application/vnd.ms-powerpoint.addin.macroEnabled.12 .pptm application/vnd.ms-powerpoint.presentation.macroEnabled.12 .potm application/vnd.ms-powerpoint.template.macroEnabled.12 .ppsm application/vnd.ms-powerpoint.slideshow.macroEnabled.12 Applications MIME Type Application MIME Type File Extension Corel Envoy application/envoy evy fractal image file application/fractals fif Windows print spool file application/futuresplash spl HTML application application/hta hta Atari ST Program application/internet-property-stream acx BinHex encoded file application/mac-binhex40 hqx Word document application/msword doc Word document template application/msword dot application/octet-stream * binary disk image application/octet-stream bin Java class file application/octet-stream class Disk Masher image application/octet-stream dms executable file application/octet-stream exe LHARC compressed archive application/octet-stream lha LZH compressed file application/octet-stream lzh CALS raster image application/oda oda ActiveX script application/olescript axs Acrobat file application/pdf pdf Outlook profile file application/pics-rules prf certificate request file application/pkcs10 p10 certificate revocation list file application/pkix-crl crl Adobe Illustrator file application/postscript ai postscript file application/postscript eps postscript file application/postscript ps rich text format file application/rtf rtf set payment initiation application/set-payment-initiation setpay set registration initiation application/set-registration-initiation setreg Excel Add-in file application/vnd.ms-excel xla Excel chart application/vnd.ms-excel xlc Excel macro application/vnd.ms-excel xlm Excel spreadsheet application/vnd.ms-excel xls Excel template application/vnd.ms-excel xlt Excel worspace application/vnd.ms-excel xlw Outlook mail message application/vnd.ms-outlook msg serialized certificate store file application/vnd.ms-pkicertstore sst Windows catalog file application/vnd.ms-pkiseccat cat stereolithography file application/vnd.ms-pkistl stl PowerPoint template application/vnd.ms-powerpoint pot PowerPoint slide show application/vnd.ms-powerpoint pps PowerPoint presentation application/vnd.ms-powerpoint ppt Microsoft Project file application/vnd.ms-project mpp WordPerfect macro application/vnd.ms-works wcm Microsoft Works database application/vnd.ms-works wdb Microsoft Works spreadsheet application/vnd.ms-works wks Microsoft Works word processsor document application/vnd.ms-works wps Windows help file application/winhlp hlp binary CPIO archive application/x-bcpio bcpio computable document format file application/x-cdf cdf Unix compressed file application/x-compress z gzipped tar file application/x-compressed tgz Unix CPIO archive application/x-cpio cpio Photoshop custom shapes file application/x-csh csh Kodak RAW image file application/x-director dcr Adobe Director movie application/x-director dir Macromedia Director movie application/x-director dxr device independent format file application/x-dvi dvi Gnu tar archive application/x-gtar gtar Gnu zipped archive application/x-gzip gz hierarchical data format file application/x-hdf hdf internet settings file application/x-internet-signup ins IIS internet service provider settings application/x-internet-signup isp ARC+ architectural file application/x-iphone iii JavaScript file application/x-javascript js LaTex document application/x-latex latex Microsoft Access database application/x-msaccess mdb Windows CardSpace file application/x-mscardfile crd CrazyTalk clip file application/x-msclip clp dynamic link library application/x-msdownload dll Microsoft media viewer file application/x-msmediaview m13 Steuer2001 file application/x-msmediaview m14 multimedia viewer book source file application/x-msmediaview mvb Windows meta file application/x-msmetafile wmf Microsoft Money file application/x-msmoney mny Microsoft Publisher file application/x-mspublisher pub Turbo Tax tax schedule list application/x-msschedule scd FTR media file application/x-msterminal trm Microsoft Write file application/x-mswrite wri computable document format file application/x-netcdf cdf Mastercam numerical control file application/x-netcdf nc MSX computers archive format application/x-perfmon pma performance monitor counter file application/x-perfmon pmc process monitor log file application/x-perfmon pml Avid persistant media record file application/x-perfmon pmr Pegasus Mail draft stored message application/x-perfmon pmw personal information exchange file application/x-pkcs12 p12 PKCS #12 certificate file application/x-pkcs12 pfx PKCS #7 certificate file application/x-pkcs7-certificates p7b software publisher certificate file application/x-pkcs7-certificates spc certificate request response file application/x-pkcs7-certreqresp p7r PKCS #7 certificate file application/x-pkcs7-mime p7c digitally encrypted message application/x-pkcs7-mime p7m digitally signed email message application/x-pkcs7-signature p7s Bash shell script application/x-sh sh Unix shar archive application/x-shar shar Flash file application/x-shockwave-flash swf Stuffit archive file application/x-stuffit sit system 5 release 4 CPIO file application/x-sv4cpio sv4cpio system 5 release 4 CPIO checksum data application/x-sv4crc sv4crc consolidated Unix file archive application/x-tar tar Tcl script application/x-tcl tcl LaTeX source document application/x-tex tex LaTeX info document application/x-texinfo texi LaTeX info document application/x-texinfo texinfo unformatted manual page application/x-troff roff Turing source code file application/x-troff t TomeRaider 2 ebook file application/x-troff tr Unix manual application/x-troff-man man readme text file application/x-troff-me me 3ds Max script file application/x-troff-ms ms uniform standard tape archive format file application/x-ustar ustar source code application/x-wais-source src internet security certificate application/x-x509-ca-cert cer security certificate application/x-x509-ca-cert crt DER certificate file application/x-x509-ca-cert der public key security object application/ynd.ms-pkipko pko zipped file application/zip zip Sound Files MIME Type Application MIME Type File Extension audio file audio/basic au sound file audio/basic snd midi file audio/mid mid media processing server studio audio/mid rmi MP3 file audio/mpeg mp3 audio interchange file format audio/x-aiff aif compressed audio interchange file audio/x-aiff aifc audio interchange file format audio/x-aiff aiff media playlist file audio/x-mpegurl m3u Real Audio file audio/x-pn-realaudio ra Real Audio metadata file audio/x-pn-realaudio ram WAVE audio file audio/x-wav wav Image Files MIME Type Application MIME Type File Extension Bitmap image/bmp bmp compiled source code image/cis-cod cod graphic interchange format image/gif gif image file image/ief ief JPEG image image/jpeg jpe JPEG image image/jpeg jpeg JPEG image image/jpeg jpg JPEG file interchange format image/pipeg jfif scalable vector graphic image/svg+xml svg TIF image image/tiff tif TIF image image/tiff tiff Sun raster graphic image/x-cmu-raster ras Corel metafile exchange image file image/x-cmx cmx icon image/x-icon ico portable any map image image/x-portable-anymap pnm portable bitmap image image/x-portable-bitmap pbm portable graymap image image/x-portable-graymap pgm portable pixmap image image/x-portable-pixmap ppm RGB bitmap image/x-rgb rgb X11 bitmap image/x-xbitmap xbm X11 pixmap image/x-xpixmap xpm X-Windows dump image image/x-xwindowdump xwd Mail Message Files MIME Type Application MIME Type File Extension MHTML web archive message/rfc822 mht MIME HTML file message/rfc822 mhtml Windows Live Mail newsgroup file message/rfc822 nws Text Files MIME Type Application MIME Type File Extension Cascading Style Sheet text/css css H.323 internet telephony file text/h323 323 HTML file text/html htm HTML file text/html html Exchange streaming media file text/html stm NetMeeting user location service file text/iuls uls BASIC source code file text/plain bas C/C++ source code file text/plain c C/C++/Objective C header file text/plain h text file text/plain txt rich text file text/richtext rtx Scitext continuous tone file text/scriptlet sct tab separated values file text/tab-separated-values tsv hypertext template file text/webviewhtml htt HTML component file text/x-component htc TeX font encoding file text/x-setext etx vCard file text/x-vcard vcf Video Files MIME Type Application MIME Type File Extension MPEG-2 audio file video/mpeg mp2 MPEG-2 audio file video/mpeg mpa MPEG movie file video/mpeg mpe MPEG movie file video/mpeg mpeg MPEG movie file video/mpeg mpg MPEG-2 video stream video/mpeg mpv2 MPEG-4 video/mp4 mp4 Apple QuickTime movie video/quicktime mov Apple QuickTime movie video/quicktime qt Logos library system file video/x-la-asf lsf streaming media shortcut video/x-la-asf lsx advanced systems format file video/x-ms-asf asf ActionScript remote document video/x-ms-asf asr Microsoft ASF redirector file video/x-ms-asf asx audio video interleave file video/x-msvideo avi Apple QuickTime movie video/x-sgi-movie movie Virtual World Files MIME Type Application MIME Type File Extension Flare decompiled actionscript file x-world/x-vrml flr VRML file x-world/x-vrml vrml VRML world x-world/x-vrml wrl compressed VRML world x-world/x-vrml wrz 3ds max XML animation file x-world/x-vrml xaf Reality Lab 3D image file x-world/x-vrml xof 参考文献微软办公文件 MIME Typesinput[file]标签的accept=”image/*”属性响应很慢的解决办法A List of MIME Types by Content TypeMedia Types","tags":[{"name":"MIME","slug":"MIME","permalink":"http://zhensherlock.github.io/tags/MIME/"},{"name":"HTML5","slug":"HTML5","permalink":"http://zhensherlock.github.io/tags/HTML5/"}]},{"title":"使用OpenXml实现生成数据字典文档","date":"2016-04-29T08:54:17.000Z","path":"2016/04/29/openxml-generate-data-dictionary/","text":"导语 最近项目在走验收流程，之前没有仔细看SOW文档，发现需要补好多份文档，其中就有数据字典，项目组不愿意花时间太多的时间弄这些文档，也不希望以后还要重复劳动力，最终决定做一个工具，方便自己生成数据字典文档。 正文这里只是分享一下开发的思路和经历（如果发现有问题，请及时告诉我，我会即时纠正，以免误导他人，欢迎大家多多指点）。 投影未脱机的数据库列表（使用T-SQL） 投影当前数据库的表列表（使用T-SQL） 投影某表的字段信息列表（使用T-SQL） 使用OpenXml新建总文档 使用OpenXml开始生成单张表的数据字典，替换书签 使用OpenXml添加表格，完成单张表的数据字典docx文档 使用OpenXml将当前文档合并成到总文档中 工具的界面大体如下： 图1 投影未脱机的数据库列表（使用T-SQL）SELECT Name FROM Master..SysDatabases WHERE STATUS = 65536 ORDER BY Name 投影当前数据库的表列表（使用T-SQL）USE TestDB;SELECT Name FROM SysObjects Where XType='U' ORDER BY Name DESC 投影某表的字段信息列表（使用T-SQL）USE TestDB;SELECTa.name 字段名 ,( CASE WHEN COLUMNPROPERTY(a.id, a.name, 'IsIdentity') = 1 THEN '√' ELSE ''END ) 标识 ,( CASE WHEN ( SELECT COUNT(*) FROM sysobjects WHERE ( name IN ( SELECT name FROM sysindexes WHERE ( id = a.id ) AND ( indid IN ( SELECT indid FROM sysindexkeys WHERE ( id = a.id ) AND ( colid IN ( SELECT colid FROM syscolumns WHERE ( id = a.id ) AND ( name = a.name ) ) ) ) ) ) ) AND ( xtype = 'PK' ) ) &gt; 0 THEN '√' ELSE ''END ) 主键 ,( CASE b.name WHEN 'varchar' THEN b.name + '(' + cast(a.length as varchar(8)) + ')' WHEN 'nvarchar' THEN b.name + '(' + cast(a.length as varchar(8)) + ')' ELSE b.nameEND ) 类型 ,( CASE WHEN a.isnullable = 1 THEN '√' ELSE ''END ) 允许空 ,( CASE a.name WHEN 'Id' THEN 'Id' WHEN 'AddTime' THEN '添加时间' WHEN 'UpdateTime' THEN '修改时间' WHEN 'IsValid' THEN '删除标记' WHEN 'AddIp' THEN '添加IP地址' WHEN 'UpdateIp' THEN '修改IP地址' WHEN 'State' THEN '状态' WHEN 'PicUrl' THEN '图片地址' WHEN 'Image' THEN '图片地址' WHEN 'Description' THEN '介绍' WHEN 'Title' THEN '标题' WHEN 'Note' THEN '备注' WHEN 'Type' THEN '类型' WHEN 'Content' THEN '内容' END ) 字段中文名,ISNULL(e.text, '') 默认值,'' as 备注FROM syscolumns a LEFT JOIN systypes b ON a.xtype = b.xusertype INNER JOIN sysobjects d ON a.id = d.id AND d.xtype = 'U' AND d.name &lt;&gt; 'dtproperties' LEFT JOIN syscomments e ON a.cdefault = e.id LEFT JOIN sys.extended_properties g ON a.id = g.major_id AND a.colid = g.minor_id LEFT JOIN sys.extended_properties f ON d.id = f.class AND f.minor_id = 0WHERE b.name IS NOT NULLand d.name='Account'ORDER BY a.id , a.colorder; 使用OpenXml新建总文档tmplFilePath是临时存放各个表数据字典的文件夹string path = string.Format(@\"&#123;0&#125;&#123;1&#125;.docx\", tmplFilePath, DateTime.Now.Ticks.ToString());using (WordprocessingDocument doc = WordprocessingDocument.Create(path, WordprocessingDocumentType.Document))&#123; MainDocumentPart mainPart = doc.AddMainDocumentPart(); mainPart.Document = new Document(); Body body = mainPart.Document.AppendChild(new Body()); Paragraph p = mainPart.Document.Body.AppendChild(new Paragraph()); p.AppendChild(new Run(new Text(\"数据字典\"))); &#125; 使用OpenXml开始生成单张表的数据字典，替换书签tmplFileName是单张表的数据字典文档路径using (WordprocessingDocument tmplDoc = WordprocessingDocument.Open(tmplFileName, true))&#123; //修改文档类型 (dotx-&gt;docx) tmplDoc.ChangeDocumentType(WordprocessingDocumentType.Document); var bookMarks = FindBookmarks(tmplDoc.MainDocumentPart.Document); //替换书签 foreach (var end in bookMarks) &#123; if (end.Key == \"TableName\") &#123; var textElement = new Text(tableName); var runElement = new Run(textElement); end.Value.InsertAfterSelf(runElement); &#125; &#125;&#125; 下面是FindBookmarks方法private Dictionary&lt;string, BookmarkEnd&gt; FindBookmarks(OpenXmlElement documentPart, Dictionary&lt;string, BookmarkEnd&gt; results = null, Dictionary&lt;string, string&gt; unmatched = null)&#123; results = results ?? new Dictionary&lt;string, BookmarkEnd&gt;(); unmatched = unmatched ?? new Dictionary&lt;string, string&gt;(); foreach (var child in documentPart.Elements()) &#123; if (child is BookmarkStart) &#123; var bStart = child as BookmarkStart; unmatched.Add(bStart.Id, bStart.Name); &#125; if (child is BookmarkEnd) &#123; var bEnd = child as BookmarkEnd; foreach (var orphanName in unmatched) &#123; if (bEnd.Id == orphanName.Key) results.Add(orphanName.Value, bEnd); &#125; &#125; FindBookmarks(child, results, unmatched); &#125; return results;&#125; 使用OpenXml添加表格，完成单张表的数据字典docx文档//设置表格属性TableProperties tblProp = new TableProperties( new TableBorders( new TopBorder() &#123; Val = new EnumValue&lt;BorderValues&gt;(BorderValues.Single), Size = 1 &#125;, new BottomBorder() &#123; Val = new EnumValue&lt;BorderValues&gt;(BorderValues.Single), Size = 1 &#125;, new LeftBorder() &#123; Val = new EnumValue&lt;BorderValues&gt;(BorderValues.Single), Size = 1 &#125;, new RightBorder() &#123; Val = new EnumValue&lt;BorderValues&gt;(BorderValues.Single), Size = 1 &#125;, new InsideHorizontalBorder() &#123; Val = new EnumValue&lt;BorderValues&gt;(BorderValues.Single), Size = 1 &#125;, new InsideVerticalBorder() &#123; Val = new EnumValue&lt;BorderValues&gt;(BorderValues.Single), Size = 1 &#125; ));Table table = new Table();table.Append(tblProp);//添加表头TableRow headerRow = new TableRow();foreach (DataColumn column in dataBaseTable.Columns)&#123; TableCell cell = new TableCell(); cell.Append(new Paragraph(new Run(new Text(column.ColumnName)))); headerRow.Append(cell);&#125;table.Append(headerRow);//添加数据foreach (DataRow row in dataBaseTable.Rows)&#123; TableRow tableRow = new TableRow(); foreach (object strCell in row.ItemArray) &#123; TableCell cell = new TableCell(); cell.Append(new Paragraph(new Run(new Text(strCell.ToString())))); tableRow.Append(cell); &#125; table.Append(tableRow);&#125;//添加表格tmplDoc.MainDocumentPart.Document.Body.Append(new Paragraph(new Run(table))); 使用OpenXml将当前文档合并到总文档中path是总文档的路径tmplFileName是当前文档的路径//将当前word和总文档的合并using (WordprocessingDocument template = WordprocessingDocument.Open(path, true))&#123; MainDocumentPart mainPart = template.MainDocumentPart; string altChunkId = tableName; AlternativeFormatImportPart chunk = mainPart.AddAlternativeFormatImportPart( AlternativeFormatImportPartType.WordprocessingML, altChunkId); using (FileStream fileStream = File.Open(tmplFileName, FileMode.Open)) chunk.FeedData(fileStream); AltChunk altChunk = new AltChunk(); altChunk.Id = altChunkId; mainPart.Document .Body .InsertAfter(altChunk, mainPart.Document.Body .Elements&lt;Paragraph&gt;().Last()); mainPart.Document.Save();&#125; 最终效果 图2 任务完成，这里是源代码，晚安！","tags":[{"name":"C#","slug":"C","permalink":"http://zhensherlock.github.io/tags/C/"},{"name":"WinForm","slug":"WinForm","permalink":"http://zhensherlock.github.io/tags/WinForm/"},{"name":"OpenXml","slug":"OpenXml","permalink":"http://zhensherlock.github.io/tags/OpenXml/"}]},{"title":"Photoshop 将点转换成PX","date":"2016-04-28T01:35:31.000Z","path":"2016/04/28/front/photoshop-convert-px/","text":"正文打开Photoshop首选项——编辑，选择单“位与标尺”，如下界面： 图1 选择后出现如下界面，选择像素即可 图2","tags":[{"name":"Photoshop","slug":"Photoshop","permalink":"http://zhensherlock.github.io/tags/Photoshop/"}]},{"title":"SQL Server 获取插入记录后的自增ID","date":"2016-04-27T01:07:40.000Z","path":"2016/04/27/database/sql-server-identity/","text":"导语 有时我们在写SQL语句时，会遇到在插入一条记录的后要立即获取所在数据库中的ID，而该ID是自增生成的。 正文如果我们要获取自增的ID，最简单的方法就是在INSERT语句之后select @@indentity，但是如果插入的表有INSERT触发器，那使用select @@indentity就会不对。例如，有两个表 T1 和 T2（T1 和 T2 都有 IDENTITY 列），在 T1 上定义了一个 INSERT 触发器。当 T1 插入数据时，T1 的INSERT触发器被触发，并在 T2 中插入一行，这时 @@IDENTITY 返回插入到当前会话中任何作用域内的最后一个 IDENTITY 列值，所以该值是插入 T2 中的ID。在SQL Server 中还有其他两个函数可以获取插入到 IDENTITY 列中的值，分别是：SCOPE_IDENTITY、IDENT_CURRENT，接一下我们来分别了解一下各自的语法。 @@IDENTITY 返回为当前会话的所有作用域中的任何表最后生成的标识值。 SCOPE_IDENTITY 返回为当前会话和当前作用域中的任何表最后生成的标识值。 IDENT_CURRENT 返回为任何会话和任何作用域中的特定表最后生成的标识值，它不受作用域和会话的限制，而受限于所指定的表。 按照其语法的来看，我们可以推断出各个函数应用到上面例子中的结果分别是： @@IDENTITY 返回插入到当前会话中任何作用域内的最后一个 IDENTITY 列值，该值是插入 T2 中的值。 SCOPE_IDENTITY 返回插入 T1 中的 IDENTITY 值，该值是发生在相同作用域中的最后一个 INSERT。如果在作用域中发生插入语句到标识列之前唤醒调用 SCOPE_IDENTITY() 函数，则该函数将返回 NULL 值。 而IDENT_CURRENT(‘T1’) 和 IDENT_CURRENT(‘T2’) 返回的值分别是这两个表最后自增的值。 参考文献使用SQL Server 获取插入记录后的ID(自动编号)","tags":[{"name":"SQL Server","slug":"SQL-Server","permalink":"http://zhensherlock.github.io/tags/SQL-Server/"}]},{"title":"JSLint Missing Radix Parameter","date":"2016-04-21T08:44:37.000Z","path":"2016/04/21/front/jslint-missing-radix-parameter/","text":"文正使用JSLint检查javascript代码语法时，会遇到很多无头绪的报错，比如：Missing radix parameter。 这个错误信息主要是因为我们没有深刻掌握parseInt语法，意思是缺少一个基数根，也就是指parseInt的第二个参数没有指定。 parseInt的第二个参数有四种:2、8、10、16，分别对应二进制、八进制、十进制、十六进制；默认是:十进制；在转换时可以忽略第二个参数，这样js照样可以运行，但是在你进行语法校验时，JSLint却会报错，这是因为压缩工具对语法的严谨性要求比较高，建议大家在用parseInt语法进行转换时，最好加个第二个参数。 参考文献javascript报错：Missing radix parameter","tags":[{"name":"JSLint","slug":"JSLint","permalink":"http://zhensherlock.github.io/tags/JSLint/"},{"name":"JavaScript","slug":"JavaScript","permalink":"http://zhensherlock.github.io/tags/JavaScript/"}]},{"title":"SQL Server Case When 用法","date":"2016-04-19T00:41:52.000Z","path":"2016/04/19/database/sql-server-case-when/","text":"文正Case When有两种用法。分别是：简单Case函数和Case搜索函数。 简单Case函数CASE sex WHEN '1' THEN '男' WHEN '2' THEN '女'ELSE '其他' END Case搜索函数CASE WHEN sex = '1' THEN '男' WHEN sex = '2' THEN '女'ELSE '其他' END 参考文献SqlServer Case When用法","tags":[{"name":"SQL Server","slug":"SQL-Server","permalink":"http://zhensherlock.github.io/tags/SQL-Server/"}]},{"title":"Visual Studio远程调试","date":"2016-04-14T09:59:22.000Z","path":"2016/04/14/visual-studio-remote-debugger/","text":"导语 在开发的时候，我们有时会用远程调试工具进行debug，本文就简单的介绍一下如何使用Visual Studio自带的远程调试工具（我们以VS2012为例）。 步骤找到Remote Debugger Folder文件夹 图1 图2 接一下我们使用“无身份验证”并勾选“允许任何用户进行调试”；将最长空闲时间设置多点。 图3 图4 图5 但是在调试网站的时候，有好几个网站，我们无法确定是哪个w3wap.exe；我们可以使用命令查看PID1）对于IIS6,可以“开始”-》运行，输入 “iisapp -a ”来显示应用程序池w3wp.exe进程对应的pid和进程池名称。iisapp.vbs它是一个脚本程序,在安装2003时需要SP1才有。2）IIS7可以直接用它的外壳命令假定C盘是系统盘1：cd C:/Windows/System32/inetsrv2：appcmd.exe list wp 参考文献远程调试步骤查看PID","tags":[{"name":"Visual Studio","slug":"Visual-Studio","permalink":"http://zhensherlock.github.io/tags/Visual-Studio/"}]},{"title":"SQL Server 递归函数","date":"2016-04-14T08:54:19.000Z","path":"2016/04/14/database/sql-server-recursion/","text":"导语 有时我们在设计表结构时，会遇到主键关联到自身表的parentid，这时我们就会需要传递一个id，将所有的子集都获取出来。 需要补习的语法 WITH AS摘自网上WITH AS短语，也叫做子查询部分（subquery factoring），可以让你做很多事情，定义一个SQL片断，该SQL片断会被整个SQL语句所用到。有的时候，是为了让SQL语句的可读性更高些，也有可能是在UNION ALL的不同部分，作为提供数据的部分。特别对于UNION ALL比较有用。因为UNION ALL的每个部分可能相同，但是如果每个部分都去执行一遍的话，则成本太高，所以可以使用WITH AS短语，则只要执行一遍即可。如果WITH AS短语所定义的表名被调用两次以上，则优化器会自动将WITH AS短语所获取的数据放入一个TEMP表里，如果只是被调用一次，则不会。而提示materialize则是强制将WITH AS短语里的数据放入一个全局临时表里。很多查询通过这种方法都可以提高速度。 实例WITH cte AS ( SELECT dept_id , dept_name FROM department WHERE dept_id = '1111' UNION ALL SELECT d.dept_id , d.dept_name FROM cte c INNER JOIN department d ON c.dept_id = d.parent_id )SELECT dept_idFROM cte; 参考文献SQL递归查询(with cte as)SQL中使用WITH AS提高性能－使用公用表表达式（CTE）简化嵌套SQL","tags":[{"name":"SQL Server","slug":"SQL-Server","permalink":"http://zhensherlock.github.io/tags/SQL-Server/"}]},{"title":"CSS优先级计算","date":"2016-04-08T08:04:00.000Z","path":"2016/04/08/front/css-priority/","text":"导语 前端开发时，经常会遇到当前元素需要覆盖样式的需求，这篇我们来了解一下css是如何来确定当前使用哪种样式的。 正文 类型 权值 内联样式表 1000 ID 选择器 100 Class 类选择器 10 HTML 标签选择器 1","tags":[{"name":"CSS","slug":"CSS","permalink":"http://zhensherlock.github.io/tags/CSS/"}]},{"title":"移动前端头部标签","date":"2016-04-07T01:04:00.000Z","path":"2016/04/07/front/html5-head-meta/","text":"导语 移动前端开发中添加一些webkit专属的HTML5头部标签，帮助浏览器更好解析html代码，更好地将移动web前端页面表现出来。本文整理一些常用的meta标签。 基本设置&lt;!DOCTYPE html&gt;使用 HTML5 doctype，不区分大小写&lt;html lang=&quot;zh-cmn-Hans&quot;&gt;更加标准的 lang 属性写法 重点&lt;!-- 声明文档使用的字符编码 --&gt;&lt;meta charset='utf-8'&gt;&lt;!-- 优先使用 IE 最新版本和 Chrome --&gt;&lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"/&gt;&lt;!-- 页面描述 --&gt;&lt;meta name=\"description\" content=\"不超过150个字符\"/&gt;&lt;!-- 页面关键词 --&gt;&lt;meta name=\"keywords\" content=\"\"/&gt;&lt;!-- 网页作者 --&gt;&lt;meta name=\"author\" content=\"name, email@gmail.com\"/&gt;&lt;!-- 搜索引擎抓取 --&gt;&lt;meta name=\"robots\" content=\"index,follow\"/&gt;&lt;!-- 为移动设备添加 viewport --&gt;&lt;meta name=\"viewport\" content=\"initial-scale=1, maximum-scale=3, minimum-scale=1, user-scalable=no\"&gt;&lt;!-- `width=device-width` 会导致 iPhone 5 添加到主屏后以 WebApp 全屏模式打开页面时出现黑边 http://bigc.at/ios-webapp-viewport-meta.orz --&gt;&lt;!-- iOS 设备 begin --&gt;&lt;meta name=\"apple-mobile-web-app-title\" content=\"标题\"&gt;&lt;!-- 添加到主屏后的标题（iOS 6 新增） --&gt;&lt;meta name=\"apple-mobile-web-app-capable\" content=\"yes\"/&gt;&lt;!-- 是否启用 WebApp 全屏模式，删除苹果默认的工具栏和菜单栏 --&gt;&lt;meta name=\"apple-itunes-app\" content=\"app-id=myAppStoreID, affiliate-data=myAffiliateData, app-argument=myURL\"&gt;&lt;!-- 添加智能 App 广告条 Smart App Banner（iOS 6+ Safari） --&gt;&lt;meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\"/&gt;&lt;!-- 设置苹果工具栏颜色 --&gt;&lt;meta name=\"format-detection\" content=\"telphone=no, email=no\"/&gt;&lt;!-- 忽略页面中的数字识别为电话，忽略email识别 --&gt;&lt;!-- 启用360浏览器的极速模式(webkit) --&gt;&lt;meta name=\"renderer\" content=\"webkit\"&gt;&lt;!-- 避免IE使用兼容模式 --&gt;&lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt;&lt;!-- 不让百度转码 --&gt;&lt;meta http-equiv=\"Cache-Control\" content=\"no-siteapp\" /&gt;&lt;!-- 针对手持设备优化，主要是针对一些老的不识别viewport的浏览器，比如黑莓 --&gt;&lt;meta name=\"HandheldFriendly\" content=\"true\"&gt;&lt;!-- 微软的老式浏览器 --&gt;&lt;meta name=\"MobileOptimized\" content=\"320\"&gt;&lt;!-- uc强制竖屏 --&gt;&lt;meta name=\"screen-orientation\" content=\"portrait\"&gt;&lt;!-- QQ强制竖屏 --&gt;&lt;meta name=\"x5-orientation\" content=\"portrait\"&gt;&lt;!-- UC强制全屏 --&gt;&lt;meta name=\"full-screen\" content=\"yes\"&gt;&lt;!-- QQ强制全屏 --&gt;&lt;meta name=\"x5-fullscreen\" content=\"true\"&gt;&lt;!-- UC应用模式 --&gt;&lt;meta name=\"browsermode\" content=\"application\"&gt;&lt;!-- QQ应用模式 --&gt;&lt;meta name=\"x5-page-mode\" content=\"app\"&gt;&lt;!-- windows phone 点击无高光 --&gt;&lt;meta name=\"msapplication-tap-highlight\" content=\"no\"&gt;&lt;!-- iOS 图标 begin --&gt;&lt;link rel=\"apple-touch-icon-precomposed\" href=\"/apple-touch-icon-57x57-precomposed.png\"/&gt;&lt;!-- iPhone 和 iTouch，默认 57x57 像素，必须有 --&gt;&lt;link rel=\"apple-touch-icon-precomposed\" sizes=\"114x114\" href=\"/apple-touch-icon-114x114-precomposed.png\"/&gt;&lt;!-- Retina iPhone 和 Retina iTouch，114x114 像素，可以没有，但推荐有 --&gt;&lt;link rel=\"apple-touch-icon-precomposed\" sizes=\"144x144\" href=\"/apple-touch-icon-144x144-precomposed.png\"/&gt;&lt;!-- Retina iPad，144x144 像素，可以没有，但推荐有 --&gt;&lt;!-- iOS 图标 end --&gt;&lt;!-- iOS 启动画面 begin --&gt;&lt;link rel=\"apple-touch-startup-image\" sizes=\"768x1004\" href=\"/splash-screen-768x1004.png\"/&gt;&lt;!-- iPad 竖屏 768 x 1004（标准分辨率） --&gt;&lt;link rel=\"apple-touch-startup-image\" sizes=\"1536x2008\" href=\"/splash-screen-1536x2008.png\"/&gt;&lt;!-- iPad 竖屏 1536x2008（Retina） --&gt;&lt;link rel=\"apple-touch-startup-image\" sizes=\"1024x748\" href=\"/Default-Portrait-1024x748.png\"/&gt;&lt;!-- iPad 横屏 1024x748（标准分辨率） --&gt;&lt;link rel=\"apple-touch-startup-image\" sizes=\"2048x1496\" href=\"/splash-screen-2048x1496.png\"/&gt;&lt;!-- iPad 横屏 2048x1496（Retina） --&gt;&lt;link rel=\"apple-touch-startup-image\" href=\"/splash-screen-320x480.png\"/&gt;&lt;!-- iPhone/iPod Touch 竖屏 320x480 (标准分辨率) --&gt;&lt;link rel=\"apple-touch-startup-image\" sizes=\"640x960\" href=\"/splash-screen-640x960.png\"/&gt;&lt;!-- iPhone/iPod Touch 竖屏 640x960 (Retina) --&gt;&lt;link rel=\"apple-touch-startup-image\" sizes=\"640x1136\" href=\"/splash-screen-640x1136.png\"/&gt;&lt;!-- iPhone 5/iPod Touch 5 竖屏 640x1136 (Retina) --&gt;&lt;!-- iOS 启动画面 end --&gt;&lt;!-- iOS 设备 end --&gt;&lt;meta name=\"msapplication-TileColor\" content=\"#000\"/&gt;&lt;!-- Windows 8 磁贴颜色 --&gt;&lt;meta name=\"msapplication-TileImage\" content=\"icon.png\"/&gt;&lt;!-- Windows 8 磁贴图标 --&gt;&lt;link rel=\"alternate\" type=\"application/rss+xml\" title=\"RSS\" href=\"/rss.xml\"/&gt;&lt;!-- 添加 RSS 订阅 --&gt;&lt;link rel=\"shortcut icon\" type=\"image/ico\" href=\"/favicon.ico\"/&gt;&lt;!-- 添加 favicon icon --&gt;&lt;!-- sns 社交标签 begin --&gt;&lt;!-- 参考微博API --&gt;&lt;meta property=\"og:type\" content=\"类型\" /&gt;&lt;meta property=\"og:url\" content=\"URL地址\" /&gt;&lt;meta property=\"og:title\" content=\"标题\" /&gt;&lt;meta property=\"og:image\" content=\"图片\" /&gt;&lt;meta property=\"og:description\" content=\"描述\" /&gt;&lt;!-- sns 社交标签 end --&gt;","tags":[{"name":"HTML5","slug":"HTML5","permalink":"http://zhensherlock.github.io/tags/HTML5/"},{"name":"META","slug":"META","permalink":"http://zhensherlock.github.io/tags/META/"}]}]